@mixin inline-block {
    display: inline-block;
    vertical-align: middle;
    *vertical-align: auto;
    *zoom: 1;
    *display: inline;
}

// Center-align a block level element
@mixin center-block($extend: true) {
    @if $extend {
        @extend %center-block;
    }
    @else {
        margin-left: auto;
        margin-right: auto;
    }
}

%center-block {
    @include center-block(false);
}

// clearfix
@mixin clearfix($extend: true) {
    @if $extend {
        @extend %clearfix;
    }
    @else {
        &::before,
        &::after {
            content: "";
            display: table;
        }
        &::after {
            clear: both;
        }
    }
}

%clearfix {
    @include clearfix(false);
}

// Hide only visually, but have it available for screenreaders
// 只隐藏于视觉，屏幕浏览器可以阅读
@mixin hidden-clip($extend: true) {
    @if $extend {
        @extend %hidden-clip;
    }
    @else {
        position: absolute;
        clip: rect(1px, 1px, 1px, 1px);
    }
}

%hidden-clip {
    @include hidden-clip(false);
}

// ellipsis
@mixin ellipsis($extend: true) {
    @if $extend {
        @extend %ellipsis;
    }
    @else {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }
}

%ellipsis {
    @include ellipsis(false);
}

// ellipsis lines
// only old webkit flex box
@mixin ellipsis-lines($lines: 2) {
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
}

// word-break
@mixin word-break($extend: true) {
    @if $extend {
        @extend %word-break;
    }
    @else {
        white-space: normal;
        word-wrap: break-word;
        word-break: break-all;
    }
}

%word-break {
    @include word-break(false);
}

// disabled
// add !important
@mixin disabled($colorText: map-get($colorDisabled, text), $colorBg: map-get($colorDisabled, bg), $colorBorder: false) {
    background-color: $colorBg !important;
    color: $colorText !important;
    cursor: default !important;
    pointer-events: none !important;
    @if $colorBorder {
        border: 1px solid map-get($colorDisabled, border);
    }
}

%disabled {
    @include disabled;
}

// image replace text
@mixin ir($extend: true) {
    @if $extend {
        @extend %ir;
    }
    @else {
        font: 0/0 a;
        text-shadow: none;
        border: 0 none;
        color: transparent;
    }
}

%ir {
    @include ir(false);
}

@mixin overflow-touch {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
}

@mixin resizable($direction) {
    resize: $direction; // Options: horizontal, vertical, both
    overflow: auto; // Per CSS3 UI, `resize` only applies when `overflow` isn't `visible`
}

@mixin text-overflow {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin backface-visibility($visibility) {
    -webkit-backface-visibility: $visibility;
    -moz-backface-visibility: $visibility;
    backface-visibility: $visibility;
}

@mixin unselectable() {
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

// Placeholder text
@mixin placeholder($color: $input-color-placeholder) {
    &::-moz-placeholder {
        color: $color; // Firefox
        opacity: 1;
    } // See https://github.com/twbs/bootstrap/pull/11526
    &:-ms-input-placeholder {
        color: $color;
    } // Internet Explorer 10+
    &::-webkit-input-placeholder {
        color: $color;
    } // Safari and Chrome
}

@mixin user-select($select) {
    -webkit-user-select: $select;
    -moz-user-select: $select;
    -ms-user-select: $select; // IE10+
    user-select: $select;
}

@mixin hide-text() {
    font: #{0/0} a;
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

// New mixin to use as of v3.0.1
@mixin text-hide() {
    @include hide-text();
}

// WebKit-style focus
@mixin tab-focus {
    outline: thin dotted #333;
    outline: 5px auto -webkit-focus-ring-color;
    outline-offset: -2px;
}

@mixin padding($gap, $value) {
    .p-t-#{$gap} {
        padding-top: $value
    }
    .p-b-#{$gap} {
        padding-bottom: $value
    }
    .p-l-#{$gap} {
        padding-left: $value
    }
    .p-r-#{$gap} {
        padding-right: $value
    }
    .p-tb-#{$gap} {
        padding-top: $value;
        padding-bottom: $value;
    }
    .p-lr-#{$gap} {
        padding-left: $value;
        padding-right: $value;
    }
    .p-all-#{$gap} {
        padding: $value;
    }
}

@mixin margin($gap, $value) {
    .m-t-#{$gap} {
        margin-top: $value
    }
    .m-b-#{$gap} {
        margin-bottom: $value
    }
    .m-l-#{$gap} {
        margin-left: $value
    }
    .m-r-#{$gap} {
        margin-right: $value
    }
    .m-tb-#{$gap} {
        margin-top: $value;
        margin-bottom: $value;
    }
    .m-lr-#{$gap} {
        margin-left: $value;
        margin-right: $value;
    }
    .m-all-#{$gap} {
        margin: $value;
    }
}
